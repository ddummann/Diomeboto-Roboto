//Entra a https://github.com/robsoncouto/arduino-songs para explicaciones del codigo del buzzer :p

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Fonts/FreeMonoBoldOblique24pt7b.h>
#include <Servo.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32

#define OLED_RESET     4 
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
#define bitmap_height   128
#define bitmap_width    64

Servo servoMotor;
Servo servoMotor2;

#define NOTE_B0  31
#define NOTE_C1  33
#define NOTE_CS1 35
#define NOTE_D1  37
#define NOTE_DS1 39
#define NOTE_E1  41
#define NOTE_F1  44
#define NOTE_FS1 46
#define NOTE_G1  49
#define NOTE_GS1 52
#define NOTE_A1  55
#define NOTE_AS1 58
#define NOTE_B1  62
#define NOTE_C2  65
#define NOTE_CS2 69
#define NOTE_D2  73
#define NOTE_DS2 78
#define NOTE_E2  82
#define NOTE_F2  87
#define NOTE_FS2 93
#define NOTE_G2  98
#define NOTE_GS2 104
#define NOTE_A2  110
#define NOTE_AS2 117
#define NOTE_B2  123
#define NOTE_C3  131
#define NOTE_CS3 139
#define NOTE_D3  147
#define NOTE_DS3 156
#define NOTE_E3  165
#define NOTE_F3  175
#define NOTE_FS3 185
#define NOTE_G3  196
#define NOTE_GS3 208
#define NOTE_A3  220
#define NOTE_AS3 233
#define NOTE_B3  247
#define NOTE_C4  262
#define NOTE_CS4 277
#define NOTE_D4  294
#define NOTE_DS4 311
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_FS4 370
#define NOTE_G4  392
#define NOTE_GS4 415
#define NOTE_A4  440
#define NOTE_AS4 466
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_DS5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_GS5 831
#define NOTE_A5  880
#define NOTE_AS5 932
#define NOTE_B5  988
#define NOTE_C6  1047
#define NOTE_CS6 1109
#define NOTE_D6  1175
#define NOTE_DS6 1245
#define NOTE_E6  1319
#define NOTE_F6  1397
#define NOTE_FS6 1480
#define NOTE_G6  1568
#define NOTE_GS6 1661
#define NOTE_A6  1760
#define NOTE_AS6 1865
#define NOTE_B6  1976
#define NOTE_C7  2093
#define NOTE_CS7 2217
#define NOTE_D7  2349
#define NOTE_DS7 2489
#define NOTE_E7  2637
#define NOTE_F7  2794
#define NOTE_FS7 2960
#define NOTE_G7  3136
#define NOTE_GS7 3322
#define NOTE_A7  3520
#define NOTE_AS7 3729
#define NOTE_B7  3951
#define NOTE_C8  4186
#define NOTE_CS8 4435
#define NOTE_D8  4699
#define NOTE_DS8 4978
#define REST      0

#define LEDID_1 5000
#define LEDID_2 5001


const unsigned char epd_bitmap_1 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xff, 0xc3, 0xff, 0x80, 0x01, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xff, 0xc3, 0xff, 0x80, 0x01, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xff, 0xc3, 0xff, 0x80, 0x01, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xff, 0xc3, 0xff, 0x80, 0x01, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0x80, 0x01, 0xff, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0x80, 0x01, 0xff, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0x80, 0x01, 0xff, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0x80, 0x01, 0xff, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x87, 0xff, 0xe1, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0x87, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe1, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0x87, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe1, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0x87, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x01, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x01, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x01, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xf0, 0x01, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe1, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe1, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0x87, 0xff, 0xe1, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0x80, 0xff, 0xfe, 0x03, 0xff, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x3c, 0x7f, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xfe, 0x03, 0xff, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x3c, 0x7f, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xfe, 0x03, 0xff, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x3c, 0x7f, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xfe, 0x03, 0xff, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x3c, 0x7f, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0xff, 0xff, 0xe0, 0x3f, 0x87, 0xf0, 0xff, 0xe1, 0xfc, 0x03, 0xff, 0xff, 0x01, 0xff, 
	0xff, 0x80, 0x0f, 0xff, 0xff, 0xc0, 0x07, 0xf0, 0xff, 0xe1, 0xe0, 0x3f, 0xff, 0xf0, 0x01, 0xff, 
	0xff, 0x80, 0x0f, 0xff, 0xff, 0xc0, 0x07, 0xf0, 0xff, 0xe1, 0xe0, 0x3f, 0xff, 0xf0, 0x01, 0xff, 
	0xff, 0x80, 0x0f, 0xff, 0xff, 0xc0, 0x07, 0xf0, 0xff, 0xe1, 0xe0, 0x3f, 0xff, 0xf0, 0x01, 0xff, 
	0xff, 0x80, 0x0f, 0xff, 0xff, 0xc0, 0x07, 0xf0, 0xff, 0xe1, 0xe0, 0x3f, 0xff, 0xf0, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x01, 0xff
};



// Velocidad de la canción 
int tempo = 120;

// El pin del buzzer
int buzzer = 3;

// El orden del arreglo es la nota y luego su duración .
// Es necesario saber un poquito de partituras en la música
// un 4 Significa una nota negra, 8 una corchea , 16 una semicorchea
// poner un numero negativo, significa una nota con punto,

int melody[] = {

  //TUTU TI TU TU TU TU TURURU
  14, 99,
  NOTE_D4, 16, NOTE_D4, 16, NOTE_D5, -16,REST, 32, NOTE_A4, -16, REST, 16, NOTE_GS4, 16,REST, 16,  NOTE_G4, 16,REST, 16,  NOTE_F4, 8,  NOTE_D4, 16, 
  NOTE_F4,16, NOTE_G4,16,

};

int notes = sizeof(melody) / sizeof(melody[0]) / 2;
int wholenote = (60000 * 4) / tempo;
int divider = 0, noteDuration = 0;

void setup() {

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  display.drawBitmap(0, 0, epd_bitmap_1, bitmap_height, bitmap_width, WHITE);
  display.display();

  servoMotor.attach(9);
  servoMotor2.attach(10);
  servoMotor.write(50);
  servoMotor2.write(50);

  int counter = 0;  
  bool ledcontrol = false;

  //Loop que itera y toca las notas
  for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {
    divider = melody[thisNote + 1];
    if (divider > 0) {
      noteDuration = (wholenote) / divider;
    } else if (divider < 0) {
      noteDuration = (wholenote) / abs(divider);
      noteDuration *= 1.5; 
    }
    tone(buzzer, melody[thisNote], noteDuration*0.9);

     ledcontrol = !ledcontrol;
        if(ledcontrol){
          servoMotor.write(30);
          servoMotor2.write(100);
        }else{
          servoMotor.write(0);
          servoMotor2.write(130);     
        }
        
    delay(noteDuration);
    noTone(buzzer);
  }
}

void loop() {
  
}